print(names(x))
Good <- complete.cases(x[, 2],x[, 3])
print(Cor)
if(length(x[Good, 1])>treshold){
Cor = c(Cor,cor(x[Good, 2],x[Good, 3]))
}
}
Cor
}
corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 10)
corr <- function(directory, treshold = 0) {
Cor <- NULL
for(i in 1:332){
x <- read.csv(paste(directory,paste(formatC(i, width = 3, flag = "0"),"csv",sep = "."), sep = "\\"))
print(names(x))
Good <- complete.cases(x[, 2],x[, 3])
if(length(x[Good, 1])>treshold){
Cor = c(Cor,cor(x[Good, 2],x[Good, 3]))
}
}
Cor
}
corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 10)
corr <- function(directory, treshold = 0) {
Cor <- NULL
for(i in 1:332){
x <- read.csv(paste(directory,paste(formatC(i, width = 3, flag = "0"),"csv",sep = "."), sep = "\\"))
Good <- complete.cases(x[, 2],x[, 3])
if(length(x[Good, 1])>treshold){
Cor = c(Cor,cor(x[Good, 2],x[Good, 3]))
}
}
Cor
}
complete("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 3)
complete("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata")
corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 800)
cr <- corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 150)
head(cr)
summary(cr)
cr <- corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 400)
head(cr)
summary(cr)
cr <- corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata", 5000)
summary(cr)
length(cr)
cr <- corr("C:\\Users\\Wim\\mystuff\\DataScienceCourse\\RProgramming\\specdata")
summary(cr)
length(cr)
library("swirl")
swirl()
bye()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 55, z)
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.renam("mytest.R","mytest2.R")
file.rename("mytest.R","mytest2.R")
?file.copy
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R",'folder1')
infor(file.path)
info(file.path)
info()
file.path("mytest3.R",'folder1','folder2')
?file.path
file.path('folder1','folder2')
?dir.create
dir.create(testdir2/testdir3,recursive = TRUE)
dir.create(/testdir2/testdir3,recursive = TRUE)
dir.create("testdir2/testdir3,recursive = TRUE)
""
"
dir.create("testdir2/testdir3",recursive = TRUE)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
unlink('testdir2',recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
library(swift)
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by = 0.5)
seq(5,10, length = 0.5)
seq(5,10, length = 30)
my_seq <- seq(5,10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
num_vec <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vec < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Wim")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z", sep = ""))
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
library(swirl)
swirl()
info()
main()
info()
bye()
swirl()
x <- c(44, NA, 5, NA)
3*x
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
play()
TRUE + TRUE
nxt()
my_data
0/0
Inf - Inf
str(str)
str(lm)
str(ls)
x <- rnorm(100, 2, 4)
str(x)
summary(x)
f <- gl(40,10)
str(f)
f
summary(f)
library(datasets)
head(airquality)
str(airquality)
m <- matrix(rnorm(100), 10, 10)
str(m)
m[,1]
s <- split(airquality, airquality$Month)
str(s)
Rprof()
summaryRprof()
by.total
$by.total
set.seed(1)
rpois(5, 2)
swirl()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames -< c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submet()
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[3]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("programming", "is", "fun!")
paste("Programming", "is", "fun!")
submit()
telegram("Helle", "there")
submit
submit()
mad_lips(place = "hier", adjective = "bevroren", noun = "kabouter")
mad_libs(place = "hier", adjective = "bevroren", noun = "kabouter")
submet()
submit()
'I' %p% 'love' %p% 'R!'
libraru(swirl)
library(swirl)
swirl()
exit()
info
info()
main()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
cls_vect
sum(flags$orange)
flag_colors <- flag[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem(2))
lapply(unique_vals, function(elem) elem[2])
install.packages("xlsx")
install.packages(xlsx)
install . packages (" XLConnect ")
install.packages("XLConnect")
install.packages("ggplot2")
library(httr)
oauth_endpoint("github")
myapp <- oauth_app("github", key = "c9e4c97fb9587ea4582f", secret = "96ab2f2a51c9adb728900b88e2a549f0c3cb92d5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
oauth_endpoints("github")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
activity <- read.csv("activity.csv")
getwd()
setwd("C:\\users\\wim\\mystuff\\datasciencecourse\\reproducibleresearch")
getwd()
dir()
setwd(".\\RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
act_by_date <- group_by(activity,date)
Total_steps_by_date <- summarise(act_by_date, sum(steps, na.rm = TRUE))
names(Total_steps_by_date)[2] <- 'Total_steps'
act_by_interval <- group_by(activity,interval)
Average_steps_by_interval <- summarise(act_by_interval, mean(steps, na.rm = TRUE))
library("dplyr")
act_by_date <- group_by(activity,date)
Total_steps_by_date <- summarise(act_by_date, sum(steps, na.rm = TRUE))
names(Total_steps_by_date)[2] <- 'Total_steps'
act_by_interval <- group_by(activity,interval)
Average_steps_by_interval <- summarise(act_by_interval, mean(steps, na.rm = TRUE))
hist(Total_steps_by_date$Total_steps, breaks = 20, xlab = 'Total Daily Steps', main = '')
mean(Total_steps_by_date$Total_steps)
median(Total_steps_by_date$Total_steps)
plot(Average_steps_by_interval, type = 'l', ylab = 'Average number of steps')
sum(is.na(activity$steps))
activity2 <- activity[!is.na(activity$steps),]
activitynas <- activity[is.na(activity$steps),]
activitynas$steps <- subset(Average_steps_by_interval, interval %in% activitynas$interval)$Means
tmp <- cbind(activity2,activitynas)
tmp <- rbind(activity2,activitynas)
head(activity2)
head(activitynas)
head(subset(Average_steps_by_interval, interval %in% activitynas$interval)$Means)
names(Average_steps_by_interval)[2] <- 'Means'
head(subset(Average_steps_by_interval, interval %in% activitynas$interval)$Means)
sum(is.na(activity$steps))
activity2 <- activity[!is.na(activity$steps),]
activitynas <- activity[is.na(activity$steps),]
activitynas$steps <- subset(Average_steps_by_interval, interval %in% activitynas$interval)$Means
tmp <- rbind(activity2,activitynas)
head(activity)
arrange(tmp, date, interval)
head(arrange(tmp, date, interval))
head(activity)
head(activity_no_nas)
activity_nas <- activity[is.na(activity$steps),]
activity_nas$steps <- subset(Average_steps_by_interval, interval %in% activity_nas$interval)$Means
activity_no_nas <- arrange(rbind(activity[!is.na(activity$steps),],activity_nas), date, interval)
head(activity_no_nas)
activity_no_nas[1,3]
activity_no_nas[1,2]
weekdays(activity_no_nas[1,2])
weekdays(as.date(activity_no_nas[1,2])
)
as.date(activity_no_nas[1,2])
as.Date(activity_no_nas[1,2])
weekdays(as.Date(activity_no_nas[1,2]))
as.numeric(weekdays(as.Date(activity_no_nas[1,2])))
weekdays(as.Date(activity_no_nas[1,2]))
?if
0
?'if'
if(weekdays(as.Date(activity_no_nas[1,2]) == 'maandag') 1
if(weekdays(as.Date(activity_no_nas[1,2]) == 'maandag')
)
c
weekdays(as.Date(activity_no_nas[1,2]) == 'maandag'
c
weekdays(as.Date(activity_no_nas[1,2])
c
weekdays(as.Date(activity_no_nas[1,2]))
weekdays(as.Date(activity_no_nas[1,2])) == 'maandag'
if(weekdays(as.Date(activity_no_nas[1,2])) == 'maandag') 4
if(weekdays(as.Date(activity_no_nas[1,2])) == c('maandag','dinsdag')) 4
if(weekdays(as.Date(activity_no_nas[1,2])) == 'maandag') 4
if(weekdays(as.Date(activity_no_nas[1,2])) == 'zaterdag') 4
if(weekdays(as.Date(activity_no_nas[1,2])) == 'zaterdag') 'weekend' else 'week'
if(weekdays(as.Date(activity_no_nas[2,2])) == 'zaterdag') 'weekend' else 'week'
if(weekdays(as.Date(activity_no_nas[5,2])) == 'zaterdag') 'weekend' else 'week'
if(weekdays(as.Date(activity_no_nas[6,2])) == 'zaterdag') 'weekend' else 'week'
if(weekdays(as.Date(activity_no_nas[7,2])) == 'zaterdag') 'weekend' else 'week'
weekdays(as.Date(activity_no_nas[7,2]))
weekdays(as.Date(activity_no_nas[6,2]))
weekdays(as.Date(activity_no_nas[5,2]))
weekdays(as.Date(activity_no_nas[10,2]))
weekdays(as.Date(activity_no_nas[100,2]))
weekdays(as.Date(activity_no_nas[1000,2]))
weekdays(as.Date(activity_no_nas[1500,2]))
if(weekdays(as.Date(activity_no_nas[1500,2])) == 'zaterdag') 'weekend' else 'week'
weekdays(activity_no_nas[1500,2])
activity_no_nas[1500,2]
mutate(activity_no_nas, day = if(weekdays(as.Date(activity_no_nas)) == 'zaterdag') 'weekend' else 'week')
mutate(activity_no_nas, day = if(weekdays(as.Date(date) == 'zaterdag') 'weekend' else 'week')
mutate(activity_no_nas, day = (if(weekdays(as.Date(date) == 'zaterdag') 'weekend' else 'week')
mutate(activity_no_nas, day = weekdays(as.Date(date))
c
mutate(activity_no_nas, day = weekdays(as.Date(date)))
head(mutate(activity_no_nas, day = weekdays(as.Date(date))))
head(mutate(activity_no_nas, day = weekdays(date)))
head(mutate(activity_no_nas, day = weekdays(as.Date(date)))
c
head(mutate(activity_no_nas, day = weekdays(as.Date(date))))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 1)
c
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 1))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 1 else 2))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') '1' else 2))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 'weekend' else 2))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'zaterdag') 'weekend' else '2'week))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 'weekend' else 2))
head(mutate(activity_no_nas, day = if(weekdays(as.Date(date)) == 'maandag') 'weekend' else 'week'))
head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'maandag') 'weekend' else 'week'}))
head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag') 'weekend' else 'week'}))
if(weekdays(as.Date("2012-10-01")) == 'zaterdag') 'weekend' else 'week'
if(weekdays(as.Date("2012-10-01")) == 'zaterdag' | weekdays(as.Date("2012-10-01")) == 'zondag') 'weekend' else 'week'
if(weekdays(as.Date("2012-10-01")) == 'zaterdag' || weekdays(as.Date("2012-10-01")) == 'zondag') 'weekend' else 'week'
head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' || weekdays(as.Date(date)) == 'zondag') 'weekend' else 'week'}))
activity_with_day <- head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' || weekdays(as.Date(date)) == 'zondag') 'weekend' else 'week'}))
activity_by_day <- group_by(activity_with_day,day)
activity_with_day <- head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' || weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'}))
activity_by_day <- group_by(activity_with_day,day)
summarise(activity_by_day, mean(steps))
activity_with_day <- head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' | weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'}))
summarise(activity_by_day, mean(steps))
activity_with_day <- head(mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' || weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'}))
activity_with_day$day
activity_with_day <- mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' || weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'})
activity_by_day <- group_by(activity_with_day,day)
summarise(activity_by_day, mean(steps))
activity_with_day$day
sum(activity_with_day$day == 'weekend')
sum(activity_with_day$day == 'weekday')
activity_with_day <- mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'zaterdag' | weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'})
sum(activity_with_day$day == 'weekend')
activity_with_day <- mutate(activity_no_nas, day = {if(weekdays(as.Date(date)) == 'maandag' | weekdays(as.Date(date)) == 'zondag') 'weekend' else 'weekday'})
sum(activity_with_day$day == 'weekend')
activity_with_day <- mutate(activity_no_nas, day = weekdays(as.Date(date)))
sum(activity_with_day$day == 'dinsdag')
activity_with_day <- mutate(activity_no_nas, weekday = weekdays(as.Date(date)), day = weekday)
head(activity_with_day)
activity_with_day <- mutate(activity_no_nas, weekday = weekdays(as.Date(date)), day = if(weekday == 'maandag') 'weekend')
if(weekdays(as.Date(activity_no_nas$date)) == 'maandag') 'weekend' else 'weekday'
head(weekdays(as.Date(activity_no_nas$date)) == 'maandag')
head((weekdays(as.Date(activity_no_nas$date)) == 'maandag')*'weekday')
head((weekdays(as.Date(activity_no_nas$date)) == 'maandag')'weekday')
?ifelse
head(ifelse(weekdays(as.Date(activity_no_nas$date)) == 'zaterdag','weekend','weekday'))
head(ifelse(weekdays(as.Date(activity_no_nas$date)) == 'zaterdag' || weekdays(as.Date(activity_no_nas$date)) == 'zondag','weekend','weekday'))
1 == c(2,1)
head(ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday'))
sum(ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday') == 'weekend')
sum(ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday') == 'weekday')
activity_no_nas$day <- ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday')
head(activity_no_nas)
activity_by_day <- group_by(activity_no_nas,day)
activity_by_day <- group_by(activity_no_nas,day,interval)
summarise(activity_by_day, sum(steps))
head(filter(activity_by_day, day == 'weekday'))
act_averaged <- summarise(activity_by_day, mean(steps))
head(filter(activity_averaged, day == 'weekday'))
head(filter(act_averaged, day == 'weekday'))
head(filter(act_averaged, day == 'weekend'))
filter(act_averaged, day == 'weekend')
filter(act_averaged, day == 'weekday')
?plot
act_weekdays <- filter(act_averaged, day == 'weekday')
act_weekend <- filter(act_averaged, day == 'weekend')
ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday')
act_weekdays
plot(act_weekdays$interval,act_weekdays$mean(steps))
names(act_weekdays)
names(act_weekdays)[3] = 'Aver'
plot(act_weekdays$interval,act_weekdays$Aver)
names(act_averaged)
names(act_averaged)[3] = 'Average'
par(mfrow=c(2,1))
act_weekdays <- filter(act_averaged, day == 'weekday')
act_weekend <- filter(act_averaged, day == 'weekend')
plot(act_weekdays$interval,act_weekdays$Aver)
plot(act_weekend$interval,act_weekend$Aver)
plot(act_weekdays$interval,act_weekdays$Aver, type = 'l')
plot(act_weekend$interval,act_weekend$Aver, type = 'l')
plot(act_weekdays$interval,act_weekdays$Aver, type = 'l', xlab = 'time interval', ylab = 'average steps', main = 'weekdays')
plot(act_weekend$interval,act_weekend$Aver, type = 'l', xlab = 'time interval', ylab = 'average steps', main = 'weekend')
par(mfrow=c(1,2))
plot(act_weekdays$interval,act_weekdays$Aver, type = 'l', xlab = 'time interval', ylab = 'average steps', main = 'weekdays')
plot(act_weekend$interval,act_weekend$Aver, type = 'l', xlab = 'time interval', ylab = 'average steps', main = 'weekend')
activity_no_nas <- arrange(rbind(activity[!is.na(activity$steps),],activity_nas), date, interval)
activity_no_nas$day <- ifelse(weekdays(as.Date(activity_no_nas$date)) == c('zaterdag','zondag'),'weekend','weekday')
